# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/person:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Get commit SHA
        id: get_sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Install dependencies
        run: |
          sudo curl -o /usr/local/bin/scw -L "https://github.com/scaleway/scaleway-cli/releases/download/v2.2.4/scw-2.2.4-linux-x86_64"
          sudo chmod +x /usr/local/bin/scw
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          kubectl version --client
          kustomize version
          scw version
      - name: Init SCW
        run: |
          scw init secret-key=${{ secrets.SCW_SECRET_KEY }} send-telemetry=false install-autocomplete=false with-ssh-key=false region=fr-par zone=fr-par-1
      - name: Install kubeconfig
        run: |
          scw k8s kubeconfig install ${{ secrets.SCW_CLUSTER_ID }}
      - name: Deploy new image to staging namespace
        run: |
          cd k8s/
          kubectl apply -f deployment.yml
#          kustomize edit set image ghcr.io/digitalsoba/digitalsoba.com:${{ steps.get_sha.outputs.sha_short }}
#          kustomize build | kubectl apply -f-
      - name: Cleanup
        run: |
          rm -rf /home/runner/.kube/config
          rm -rf /home/runner/.config/scw